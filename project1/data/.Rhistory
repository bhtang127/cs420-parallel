knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.pos = 'H')
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
le = read_csv("loop_efficiency.txt")
lp = read_csv("loop_parallel.txt")
lu = read_csv("loop_unrolling.txt")
ds = read_csv("dynamic_schedul.txt")
ss = read_csv("static_schedul.txt")
data1a <- le %>%
group_by(filter_len) %>%
summarize(SerialFilterFirst=median(filter_1st),SerialDataFirst=median(data_1st)) %>%
gather(Method, Median_Time, -filter_len)
ggplot(data1a, aes(x=filter_len, y=Median_Time, colour=Method)) +
geom_line() +
ylab("Medain runtime (sec)") +
xlab("Filter length (1)")
ggplot(data1a, aes(x=filter_len, y=Median_Time, colour=Method)) +
geom_line() +
ylab("Medain runtime (sec)") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data1b <- data1a %>%
mutate(normtime = filter_len / Median_Time)
ggplot(data1b, aes(x=filter_len, y=normtime, colour=Method)) +
geom_line() +
ylab("Normalized median runtime (ops/s)") +
xlab("Filter length (1)")
ggplot(data1b, aes(x=filter_len, y=normtime, colour=Method)) +
geom_line() +
ylab("Normalized median runtime (ops/s)") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data1d <- le %>%
mutate(rp = filter_1st / data_1st)
ggplot(data1d, aes(x=filter_len, y=rp)) +
geom_line() +
ylab("Relative Performance") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.pos = 'H')
data22a <- lp %>%
group_by(num_threads) %>%
summarize(parallelFilterFirst=79.643385/median(filter_1st),parallelDataFirst=70.160775/median(data_1st)) %>%
gather(Method, Median_Speedup, -num_threads)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.pos = 'H')
library(tidyverse)
le = read_csv("loop_efficiency.txt")
lp = read_csv("loop_parallel.txt")
lu = read_csv("loop_unrolling.txt")
ds = read_csv("dynamic_schedul.txt")
ss = read_csv("static_schedul.txt")
data1a <- le %>%
group_by(filter_len) %>%
summarize(SerialFilterFirst=median(filter_1st),SerialDataFirst=median(data_1st)) %>%
gather(Method, Median_Time, -filter_len)
ggplot(data1a, aes(x=filter_len, y=Median_Time, colour=Method)) +
geom_line() +
ylab("Medain runtime (sec)") +
xlab("Filter length (1)")
ggplot(data1a, aes(x=filter_len, y=Median_Time, colour=Method)) +
geom_line() +
ylab("Medain runtime (sec)") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data1b <- data1a %>%
mutate(normtime = filter_len / Median_Time)
ggplot(data1b, aes(x=filter_len, y=normtime, colour=Method)) +
geom_line() +
ylab("Normalized median runtime (512*512*256 ops/s)") +
xlab("Filter length (1)")
ggplot(data1b, aes(x=filter_len, y=normtime, colour=Method)) +
geom_line() +
ylab("Normalized median runtime (512*512*256 ops/s)") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data1d <- le %>%
mutate(rp = filter_1st / data_1st)
ggplot(data1d, aes(x=filter_len, y=rp)) +
geom_line() +
ylab("Relative Performance") +
xlab("Filter length (1)") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data22a <- lp %>%
group_by(num_threads) %>%
summarize(parallelFilterFirst=79.643385/median(filter_1st),parallelDataFirst=70.160775/median(data_1st)) %>%
gather(Method, Median_Speedup, -num_threads)
ggplot(data22a, aes(x=num_threads, y=Median_Speedup, colour=Method)) +
geom_line() +
ylab("Medain Speedup") +
xlab("Number of Threads") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data22a
data22a <- lp %>%
group_by(num_threads) %>%
summarize(parallelFilterFirst=median(filter_1st),parallelDataFirst=median(data_1st))
data22a <- lp %>%
group_by(num_threads) %>%
summarize(parallelFilterFirst=79.643385/median(filter_1st),parallelDataFirst=70.160775/median(data_1st)) %>%
gather(Method, Median_Speedup, -num_threads)
ggplot(data22a, aes(x=num_threads, y=Median_Speedup, colour=Method)) +
geom_line() +
ylab("Medain Speedup") +
xlab("Number of Threads") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
lp %>%
group_by(num_threads) %>%
summarize(parallelFilterFirst=median(filter_1st),parallelDataFirst=median(data_1st))
data22a %>%
select(Method=parallelDataFirst)
data22a %>%
select(Method==parallelDataFirst)
data22a %>%
select(Method=="parallelDataFirst")
data22a %>%
select("Method"=="parallelDataFirst")
data22a %>%
select("Method"==parallelDataFirst)
data22a %>%
filter(Method=="parallelDataFirst")
data22a %>%
filter(Method=="parallelDataFirst", num_threads<16)
data23b <- data22a %>%
filter(Method=="parallelDataFirst", num_threads<16)
data23b
sum((1-1/data23b$num_threads)*(1-1/data23b$num_threads)) / sum((1-1/data23b$num_threads)^2)
sum((1-1/data23b$Median_Speedup)*(1-1/data23b$num_threads)) / sum((1-1/data23b$num_threads)^2)
p = sum((1-1/data23b$Median_Speedup)*(1-1/data23b$num_threads)) / sum((1-1/data23b$num_threads)^2)
p
data23b <- data22a %>%
filter(Method=="parallelDataFirst", num_threads<16) %>%
as.data.frame()
Median_Speedup = data23b$Median_Speedup
num_threads = data23b$num_threads
data23b
p = sum((1-1/Median_Speedup)*(1-1/num_threads)) / sum((1-1/num_threads)^2)
p
lu %>%
summarize(LUFilterFirst=median(filter_1st),LUDataFirst=median(data_1st)) %>%
as.data.frame()
ds %>%
summarize(DynamicFilterFirst=median(filter_1st),DynamicDataFirst=median(data_1st)) %>%
as.data.frame()
ss %>%
summarize(DynamicFilterFirst=median(filter_1st),DynamicDataFirst=median(data_1st)) %>%
as.data.frame()
ss %>%
summarize(StaticFilterFirst=median(filter_1st),StaticDataFirst=median(data_1st)) %>%
as.data.frame()
ds %>%
summarize(DynamicFilterFirst=median(filter_1st),DynamicDataFirst=median(data_1st)) %>%
as.data.frame()
ss %>%
summarize(StaticFilterFirst=median(filter_1st),StaticDataFirst=median(data_1st),std=sqrt(var(data_1st))) %>%
as.data.frame()
ss %>%
summarize(StaticFilterFirst=median(filter_1st),StaticDataFirst=median(data_1st)) %>%
as.data.frame()
