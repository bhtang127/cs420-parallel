data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1",size=0.7,linetype=3) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1",size=0.7,linetype=4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1",size=0.7,linetype=5) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1",size=0.7,linetype=6) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1",size=0.7) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=2) +
geom_line(colour="deepskyblue1",size=0.8) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 0, slope = 1) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 0, slope = 1, alpha=0.3) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 0, slope = 1, alpha=0.3) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
library(tidyverse)
coindata = read.table("coindata.txt", header = TRUE)
data = coindata %>%
group_by(num_threads) %>%
summarize(median_elapsed = mean(elapsed)) %>%
mutate(speedup = 10325.4 / median_elapsed)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
p = sum((1-1/data$speedup)*(1-1/data$num_threads)) / sum((1-1/data$num_threads)^2)
p
data1 = filter(data, num_threads<32)
data1
p = sum((1-1/data1$speedup)*(1-1/data1$num_threads)) / sum((1-1/data1$num_threads)^2)
p
seq(0,1,10)
seq(0,1,length=10)
seq(0,1,length=11)
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + x_al / p)
plot(x_al,y_al)
data_al = NULL
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
plot(x_al,y_al)
data_al = NULL
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
plot(x_al,y_al,type = "l")
data_al = NULL
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_line(data_al, aes(x=x_al,y=y_al), alpha=0.3) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x)) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.2) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.3) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4, aes(label="Amdahl’s law")) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4, aes(label="Amdahl’s law")) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4, label="Amdahl’s law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4, legend="Amdahl’s law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
scale_colour_manual(labels = "Amdahl’s law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(labels=c("true value", "Amdahl's law"))
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(breaks=0:2, labels=c("true value", "Amdahl's law"))
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
scale_x_continuous(breaks=0:1, labels=c("true value", "Amdahl's law"))
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
geom_annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law") +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
ggplot2::annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
ggplot2::annotate("Amdahl's Law",x=27,y=16,label="Amdahl's Law")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
ggplot2::annotate("text",x=27,y=16,label="Amdahl's Law")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
ggplot2::annotate("text",x=28,y=16,label="Amdahl's Law")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
p = 0.9788
x_al = seq(1,32,length=128)
y_al = 1/(1 - p + p / x_al)
data_al = data.frame(x_al = x_al, y_al=y_al)
ggplot(data, aes(x=num_threads, y=speedup)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 1/(1-0.9788+0.9788/x), alpha=0.4) +
ylab("Medain Speedup [ms/ms]") +
xlab("Number of threads [1]") +
annotate("text",x=28,y=16,label="Amdahl's Law")
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]") +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 1, slope = - (1 0.9788)/(0.9788^2))
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 1, slope = - (1-0.9788)/(0.9788^2))
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 1, slope = - (1-0.9788)/(0.9788^2)) +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 100/0.9788, slope = - 100*(1-0.9788)/(0.9788^2)) +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
geom_abline(intercept = 100/0.9788, slope = - 100*(1-0.9788)/(0.9788^2), label="aaa") +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 100/((1-0.9788)*x+0.9788), alpha=0.4) +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
(1-0.9788)/(0.9788^2)
(1-0.9788)/(0.9788^2) * 100
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 100/((1-0.9788)*x+0.9788), alpha=0.4) +
annotate("text",x=28,y=60,label="Amdahl's Law")
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 100/((1-0.9788)*x+0.9788), alpha=0.4) +
annotate("text",x=28,y=60,label="Amdahl's Law") +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
data_ef = data %>%
mutate(efficiency = speedup / num_threads * 100)
ggplot(data_ef, aes(x=num_threads, y=efficiency)) +
geom_point(colour="orangered",size=1.5) +
geom_line(colour="deepskyblue1") +
stat_function(fun = function(x) 100/((1-0.9788)*x+0.9788), alpha=0.4) +
annotate("text",x=28,y=70,label="Amdahl's Law") +
ylab("Medain Efficiency [100%]") +
xlab("Number of threads [1]")
